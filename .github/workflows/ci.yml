name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Get package name and version
        id: pkg
        run: |
          echo "name=$(node -p \"require('./package.json').name\")" >> $GITHUB_OUTPUT
          echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Get published version from npm
        id: published
        run: |
          PUBLISHED_VERSION=$(npm view ${{ steps.pkg.outputs.name }} version || echo "none")
          echo "published_version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT

      - name: Publish to npm if version changed
        if: steps.pkg.outputs.version != steps.published.outputs.published_version
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 